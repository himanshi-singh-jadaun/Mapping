{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/HIMANSHI/Desktop/Mapping/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"C:/Users/HIMANSHI/Desktop/Mapping/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"C:/Users/HIMANSHI/Desktop/Mapping/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport * as React from 'react';\nimport { useContext, useEffect, useMemo, useState, useRef } from 'react';\nimport { cloneElement } from 'react';\nimport { MapContext } from './map';\nimport assert from '../utils/assert';\nimport { deepEqual } from '../utils/deep-equal';\nvar sourceCounter = 0;\nfunction createSource(map, id, props) {\n  // @ts-ignore\n  if (map.style && map.style._loaded) {\n    var options = _objectSpread({}, props);\n    delete options.id;\n    delete options.children;\n    // @ts-ignore\n    map.addSource(id, options);\n    return map.getSource(id);\n  }\n  return null;\n}\n/* eslint-disable complexity */\nfunction updateSource(source, props, prevProps) {\n  assert(props.id === prevProps.id, 'source id changed');\n  assert(props.type === prevProps.type, 'source type changed');\n  var changedKey = '';\n  var changedKeyCount = 0;\n  for (var key in props) {\n    if (key !== 'children' && key !== 'id' && !deepEqual(prevProps[key], props[key])) {\n      changedKey = key;\n      changedKeyCount++;\n    }\n  }\n  if (!changedKeyCount) {\n    return;\n  }\n  var type = props.type;\n  if (type === 'geojson') {\n    source.setData(props.data);\n  } else if (type === 'image') {\n    source.updateImage({\n      url: props.url,\n      coordinates: props.coordinates\n    });\n  } else if ((type === 'canvas' || type === 'video') && changedKeyCount === 1 && changedKey === 'coordinates') {\n    source.setCoordinates(props.coordinates);\n  } else if (type === 'vector' && 'setUrl' in source) {\n    // Added in 1.12.0:\n    // vectorTileSource.setTiles\n    // vectorTileSource.setUrl\n    switch (changedKey) {\n      case 'url':\n        source.setUrl(props.url);\n        break;\n      case 'tiles':\n        source.setTiles(props.tiles);\n        break;\n      default:\n    }\n  } else {\n    // eslint-disable-next-line\n    console.warn(\"Unable to update <Source> prop: \".concat(changedKey));\n  }\n}\n/* eslint-enable complexity */\nfunction Source(props) {\n  var map = useContext(MapContext).map.getMap();\n  var propsRef = useRef(props);\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    setStyleLoaded = _useState2[1];\n  var id = useMemo(function () {\n    return props.id || \"jsx-source-\".concat(sourceCounter++);\n  }, []);\n  useEffect(function () {\n    if (map) {\n      var forceUpdate = function forceUpdate() {\n        return setTimeout(function () {\n          return setStyleLoaded(function (version) {\n            return version + 1;\n          });\n        }, 0);\n      };\n      map.on('styledata', forceUpdate);\n      forceUpdate();\n      return function () {\n        var _a;\n        map.off('styledata', forceUpdate);\n        // @ts-ignore\n        if (map.style && map.style._loaded && map.getSource(id)) {\n          // Parent effects are destroyed before child ones, see\n          // https://github.com/facebook/react/issues/16728\n          // Source can only be removed after all child layers are removed\n          var allLayers = (_a = map.getStyle()) === null || _a === void 0 ? void 0 : _a.layers;\n          if (allLayers) {\n            var _iterator = _createForOfIteratorHelper(allLayers),\n              _step;\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var layer = _step.value;\n                // @ts-ignore (2339) source does not exist on all layer types\n                if (layer.source === id) {\n                  map.removeLayer(layer.id);\n                }\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n          }\n          map.removeSource(id);\n        }\n      };\n    }\n    return undefined;\n  }, [map]);\n  // @ts-ignore\n  var source = map && map.style && map.getSource(id);\n  if (source) {\n    updateSource(source, props, propsRef.current);\n  } else {\n    source = createSource(map, id, props);\n  }\n  propsRef.current = props;\n  return source && React.Children.map(props.children, function (child) {\n    return child && cloneElement(child, {\n      source: id\n    });\n  }) || null;\n}\nexport default Source;","map":{"version":3,"names":["React","useContext","useEffect","useMemo","useState","useRef","cloneElement","MapContext","assert","deepEqual","sourceCounter","createSource","map","id","props","style","_loaded","options","_objectSpread","children","addSource","getSource","updateSource","source","prevProps","type","changedKey","changedKeyCount","key","setData","data","updateImage","url","coordinates","setCoordinates","setUrl","setTiles","tiles","console","warn","concat","Source","getMap","propsRef","_useState","_useState2","_slicedToArray","setStyleLoaded","forceUpdate","setTimeout","version","on","off","allLayers","_a","getStyle","layers","_iterator","_createForOfIteratorHelper","_step","s","n","done","layer","value","removeLayer","err","e","f","removeSource","undefined","current","Children","child"],"sources":["C:\\Users\\HIMANSHI\\Desktop\\Mapping\\frontend\\node_modules\\react-map-gl\\src\\components\\source.ts"],"sourcesContent":["import * as React from 'react';\nimport {useContext, useEffect, useMemo, useState, useRef} from 'react';\nimport {cloneElement} from 'react';\nimport {MapContext} from './map';\nimport assert from '../utils/assert';\nimport {deepEqual} from '../utils/deep-equal';\n\nimport type {\n  MapboxMap,\n  AnySourceData,\n  GeoJSONSource,\n  ImageSource,\n  VideoSource,\n  AnySourceImpl\n} from '../types';\n\nexport type SourceProps = AnySourceData & {\n  id?: string;\n  children?: any;\n};\n\nlet sourceCounter = 0;\n\nfunction createSource(map: MapboxMap, id: string, props: SourceProps) {\n  // @ts-ignore\n  if (map.style && map.style._loaded) {\n    const options = {...props};\n    delete options.id;\n    delete options.children;\n    // @ts-ignore\n    map.addSource(id, options);\n    return map.getSource(id);\n  }\n  return null;\n}\n\n/* eslint-disable complexity */\nfunction updateSource(source: AnySourceImpl, props: SourceProps, prevProps: SourceProps) {\n  assert(props.id === prevProps.id, 'source id changed');\n  assert(props.type === prevProps.type, 'source type changed');\n\n  let changedKey = '';\n  let changedKeyCount = 0;\n\n  for (const key in props) {\n    if (key !== 'children' && key !== 'id' && !deepEqual(prevProps[key], props[key])) {\n      changedKey = key;\n      changedKeyCount++;\n    }\n  }\n\n  if (!changedKeyCount) {\n    return;\n  }\n\n  const type = props.type;\n\n  if (type === 'geojson') {\n    (source as GeoJSONSource).setData(props.data);\n  } else if (type === 'image') {\n    (source as ImageSource).updateImage({url: props.url, coordinates: props.coordinates});\n  } else if (\n    (type === 'canvas' || type === 'video') &&\n    changedKeyCount === 1 &&\n    changedKey === 'coordinates'\n  ) {\n    (source as VideoSource).setCoordinates(props.coordinates);\n  } else if (type === 'vector' && 'setUrl' in source) {\n    // Added in 1.12.0:\n    // vectorTileSource.setTiles\n    // vectorTileSource.setUrl\n    switch (changedKey) {\n      case 'url':\n        source.setUrl(props.url);\n        break;\n      case 'tiles':\n        source.setTiles(props.tiles);\n        break;\n      default:\n    }\n  } else {\n    // eslint-disable-next-line\n    console.warn(`Unable to update <Source> prop: ${changedKey}`);\n  }\n}\n/* eslint-enable complexity */\n\nfunction Source(props: SourceProps) {\n  const map: MapboxMap = useContext(MapContext).map.getMap();\n  const propsRef = useRef(props);\n  const [, setStyleLoaded] = useState(0);\n\n  const id = useMemo(() => props.id || `jsx-source-${sourceCounter++}`, []);\n\n  useEffect(() => {\n    if (map) {\n      const forceUpdate = () => setTimeout(() => setStyleLoaded(version => version + 1), 0);\n      map.on('styledata', forceUpdate);\n      forceUpdate();\n\n      return () => {\n        map.off('styledata', forceUpdate);\n        // @ts-ignore\n        if (map.style && map.style._loaded && map.getSource(id)) {\n          // Parent effects are destroyed before child ones, see\n          // https://github.com/facebook/react/issues/16728\n          // Source can only be removed after all child layers are removed\n          const allLayers = map.getStyle()?.layers;\n          if (allLayers) {\n            for (const layer of allLayers) {\n              // @ts-ignore (2339) source does not exist on all layer types\n              if (layer.source === id) {\n                map.removeLayer(layer.id);\n              }\n            }\n          }\n          map.removeSource(id);\n        }\n      };\n    }\n    return undefined;\n  }, [map]);\n\n  // @ts-ignore\n  let source = map && map.style && map.getSource(id);\n  if (source) {\n    updateSource(source, props, propsRef.current);\n  } else {\n    source = createSource(map, id, props);\n  }\n  propsRef.current = props;\n\n  return (\n    (source &&\n      React.Children.map(\n        props.children,\n        child =>\n          child &&\n          cloneElement(child, {\n            source: id\n          })\n      )) ||\n    null\n  );\n}\n\nexport default Source;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}